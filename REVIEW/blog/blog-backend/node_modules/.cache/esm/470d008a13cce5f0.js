let Koa,Router,bodyParser,mongoose,api,createFakeData;_13c‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_13c‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_13c‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_13c‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_13c‍.w("./api",[["default",["api"],function(v){api=v}]]);_13c‍.w("./createFakeData",[["default",["createFakeData"],function(v){createFakeData=v}]]);require('dotenv').config();
//const Koa = require('koa');
//const Router = require('koa-router');
//const bodyParser = require('koa-bodyparser');
//const mongoose = require('mongoose');







w;

const { PORT, MONGO_URI } = process.env;

mongoose
  .connect(MONGO_URI)
  .then(() => {
    console.log('Connected to MongoDB');
  })
  .catch((e) => {
    _13c‍.g.console.error(e);
  });

//const api = require('./api');

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());

app.use(bodyParser());

app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;

app.listen(port, () => {
  _13c‍.g.console.log('Listening to port %d', port);
});

// router.get('/', (ctx) => {
//   ctx.body = '홈';
// });

// router.get('/about/:name', (ctx) => {
//   const { name } = ctx.params;
//   ctx.body = name ? `${name}의 소개` : '소개';
// });

// router.get('/posts', (ctx) => {
//   const { id } = ctx.query;
//   ctx.body = id ? `포스트 #${id}` : '포스트 아이디가 없습니다.';
// });

// app.use(router.routes()).use(router.allowedMethods());

// app.use(async (ctx, next) => {
//   console.log(ctx.url);
//   console.log(1);
//   if (ctx.query.authorized !== '1') {
//     ctx.status = 401;
//     return;
//   }
//   await next();
//   console.log('END');
// });

// app.use((ctx, next) => {
//   console.log(2);
//   next();
// });

// app.use((ctx) => {
//   ctx.body = 'hello world';
// });
